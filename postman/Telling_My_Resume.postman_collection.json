{
	"info": {
		"_postman_id": "12345678-1234-5678-9abc-123456789abc",
		"name": "Telling My Resume API v2.0",
		"description": "Collection for testing the Telling My Resume AI-powered resume analysis application with Application Services architecture (Phase 3 complete)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Resume Management",
			"item": [
				{
					"name": "Upload Resume",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": [],
									"description": "Resume file (PDF, DOCX, or TXT) - max 10MB"
								},
								{
									"key": "customFileName",
									"value": "",
									"type": "text",
									"description": "Optional: Custom filename (will use original if not provided)"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/resume/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resume",
								"upload"
							]
						},
						"description": "Upload a resume file using the Application Service layer. Supports PDF, DOCX, and TXT files with validation and proper error handling. Returns structured response with upload details."
					},
					"response": []
				},
				{
					"name": "Read Resume Content",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/resume/read/{{fileName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resume",
								"read",
								"{{fileName}}"
							]
						},
						"description": "Read the extracted text content from a stored resume file using the Application Service layer. Returns structured response with content metadata."
					},
					"response": []
				}
			],
			"description": "Endpoints for managing resume files (upload and read)"
		},
		{
			"name": "AI Analysis",
			"item": [
				{
					"name": "Smart Analysis (Best Available)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/resume/analyze/{{fileName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resume",
								"analyze",
								"{{fileName}}"
							]
						},
						"description": "ðŸ¤– NEW: Smart analysis using the best available AI provider. Automatically selects Claude or Gemini based on availability and fallbacks gracefully. Recommended endpoint for production use."
					},
					"response": []
				},
				{
					"name": "Generate Analysis with Gemini",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/resume/generate/{{fileName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resume",
								"generate",
								"{{fileName}}"
							]
						},
						"description": "Generate resume analysis using Google's Gemini AI model specifically. Returns AI-generated insights highlighting strengths and technical competencies for IT positions."
					},
					"response": []
				},
				{
					"name": "Generate Analysis with Claude",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/resume/generateClaude/{{fileName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resume",
								"generateClaude",
								"{{fileName}}"
							]
						},
						"description": "Generate resume analysis using Anthropic's Claude AI model specifically. Returns AI-generated insights highlighting strengths and technical competencies for IT positions."
					},
					"response": []
				}
			],
			"description": "ðŸ”¥ Enhanced AI-powered resume analysis with Application Service architecture. Features smart provider selection, improved error handling, and async support."
		},
		{
			"name": "AI Provider Management",
			"item": [
				{
					"name": "Get System Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ai/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ai",
								"status"
							]
						},
						"description": "ðŸ†• Get comprehensive status of all AI providers including availability, preferred provider, and system health."
					},
					"response": []
				},
				{
					"name": "List Available Providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ai/providers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ai",
								"providers"
							]
						},
						"description": "ðŸ†• Get list of currently available AI providers (Claude, Gemini) that are ready to process requests."
					},
					"response": []
				},
				{
					"name": "Get Preferred Provider",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ai/preferred",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ai",
								"preferred"
							]
						},
						"description": "ðŸ†• Get the system's preferred AI provider based on availability and priority (Claude > Gemini)."
					},
					"response": []
				},
				{
					"name": "Check Provider Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ai/providers/{{providerName}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ai",
								"providers",
								"{{providerName}}",
								"status"
							]
						},
						"description": "ðŸ†• Check availability status of a specific provider. Use 'Claude' or 'Gemini' as providerName."
					},
					"response": []
				}
			],
			"description": "ðŸ†• NEW: AI Provider management endpoints for monitoring system health and provider availability."
		},
		{
			"name": "Web Interface",
			"item": [
				{
					"name": "View Formatted Analysis",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/resume/view/{{fileName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resume",
								"view",
								"{{fileName}}"
							]
						},
						"description": "View the formatted analysis results in a web page. Returns HTML with styled resume analysis."
					},
					"response": []
				},
				{
					"name": "Home Page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Access the main web interface for resume upload and management."
					},
					"response": []
				}
			],
			"description": "Web interface endpoints for viewing results and accessing the UI"
		},
		{
			"name": "API Documentation",
			"item": [
				{
					"name": "Swagger UI",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/swagger-ui.html",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"swagger-ui.html"
							]
						},
						"description": "Access the interactive Swagger/OpenAPI documentation for all endpoints."
					},
					"response": []
				},
				{
					"name": "API Docs JSON",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/api-docs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"api-docs"
							]
						},
						"description": "Get the OpenAPI specification in JSON format."
					},
					"response": []
				}
			],
			"description": "API documentation and specification endpoints"
		},
		{
			"name": "Database Console",
			"item": [
				{
					"name": "H2 Database Console",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/h2-console",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"h2-console"
							]
						},
						"description": "Access the H2 database console for debugging and data inspection. Use connection: jdbc:h2:file:./data/resumedb, username: sa, password: password"
					},
					"response": []
				}
			],
			"description": "Database management and debugging endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "fileName",
			"value": "resume.pdf",
			"type": "string",
			"description": "Nome do arquivo do currÃ­culo para ser usado nos endpoints"
		},
		{
			"key": "providerName",
			"value": "Claude",
			"type": "string",
			"description": "Nome do provedor de IA (Claude ou Gemini) para endpoints especÃ­ficos"
		}
	]
}